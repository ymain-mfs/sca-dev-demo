<%/*
	© 2015 NetSuite Inc.
	User may not copy, modify, distribute, or re-bundle or otherwise make available this code;
	provided, however, if you are an authorized user with a NetSuite account or log-in, you
	may use this code subject to the terms that govern your access and use.
*/%>

<%
	var SiteSettings
	,	LivePayment
	,	Profile
	,	Address
	,	CreditCard
	,	Environment
	,	Content
	,	DefaultPage
	,	Merchandising
	,	siteId
	,	Error
	,	productlist_bundle_present
	,	customerId
	,	Utils
	,	Application
	,	CMS
	,	Widget // add for bootstrapping widget data
	,	WidgetShapes; // add for bootstrapping widget shapes

	try
	{
		Application = require('Application');
		Utils = require('Utils');
		SiteSettings = require('SiteSettings.Model').get();
		Profile = require('Profile.Model').get();
		Environment = Application.getEnvironment(session, request);
		siteId = SiteSettings.siteid;

		productlist_bundle_present = Utils.recordTypeExists('customrecord_ns_pl_productlist')

		// The use of CDS and CMS are mutually exclusive, if you use CMS you can't use CDS, or if you use CDS you can't use CMS
		if (SC.Configuration.useCMS)
		{
			try
			{
				CMS = require('CMSadapter.Model').getPages();
			}
			catch(e)
			{
				console.warn('CMS could not be loaded, reason: ' + JSON.stringify(e));
			}
		}
		else
		{
			// Content depends on the instalation and inclusion of the
			// ContentDeliverService provided as a separated boundle
			// If you need to add more tags to the listURL function please consider
			// moving this to the sc.user.environment.ssp (the current file is cached)
			try
			{
				var locale = Environment && Environment.currentLanguage && Environment.currentLanguage.locale
				,	content_tag = 'app:myaccount';

				if (locale)
				{
					content_tag += ',locale:' + locale.toLowerCase();
				}

				var content_model = require('Content.Model');

				Content = content_model.listURL(siteId, content_tag);
				DefaultPage = content_model.getDefault();
			}
			catch (e)
			{
				console.warn('Content Module not present in MyAccount SSP');
			}

			if (typeof psg_dm !== 'undefined')
			{
				Merchandising = psg_dm.getMerchRule();
			}
			else
			{
				console.warn('Merchandising Module not present in ShopFlow SSP');
			}
		}

		if (session.isLoggedIn())
		{
			Address =  require('Address.Model').list();
			CreditCard = require('CreditCard.Model').list();

			// add for bootstrapping widget data
			var widgetDefinition = require('Widget.Model');
			console.log(widgetDefinition.toSource());

			Widget = require('Widget.Model').listCoded();
			WidgetShapes = require('Widget.Model').getWidgetShapes();

			try
			{
				LivePayment = require('LivePayment.Model').get();
			}
			catch (e)
			{
				LivePayment = null;
			}
		}
	}
	catch (e)
	{
		Error = Application.processError(e);
	}

	if (!productlist_bundle_present)
	{
		console.warn('Product Lists Data not present in Shopping SSP');
	}

	response.setContentType('JAVASCRIPT');
%>

<% if (Environment) { %>
	// Server Environment Info
	SC.ENVIRONMENT = <%= JSON.stringify(Environment) %>;
<% } %>

<% if (SiteSettings) { %>
	// Site Settings Info
	SC.ENVIRONMENT.siteSettings = <%= JSON.stringify(SiteSettings) %>;
	// Site site (ADVANCED or STANDARD)
	SC.ENVIRONMENT.siteType = '<%= SiteSettings.sitetype %>';
<% } %>

<% if (Content) { %>
	// The Content
	SC.ENVIRONMENT.CONTENT = <%= JSON.stringify(Content) %>;

	<% if (DefaultPage) { %>
		// The Default Page
		SC.ENVIRONMENT.DEFAULT_PAGE = <%= JSON.stringify(DefaultPage) %>;
	<% } %>
<% } %>

// Local Environment info
SC.ENVIRONMENT.jsEnvironment = 'browser';

<% if (Profile) { %>
	// The Profile
	SC.ENVIRONMENT.PROFILE = <%= JSON.stringify(_.extend(Profile, { isLoggedIn: 'T'})) %>;
	SC.ENVIRONMENT.permissions = <%= JSON.stringify(Application.getPermissions()) %>;
<% } %>

SC.SESSION = {
	currency: <%= JSON.stringify(Environment.currentCurrency) %>
,	language: <%= JSON.stringify(Environment.currentLanguage) %>
,	priceLevel: <%= JSON.stringify(Environment.currentPriceLevel) %>
,	touchpoints: <%= JSON.stringify(SiteSettings.touchpoints) %>
};

SC.getSessionInfo = function(key)
{
	var session = SC.SESSION || SC.DEFAULT_SESSION || {};
	return (key) ? session[key] : session;
}

<% if (Address) { %>
	// The Address
	SC.ENVIRONMENT.ADDRESS = <%= JSON.stringify(Address) %>;
<% } %>

<% if (CreditCard) { %>
	// The Credit Card
	SC.ENVIRONMENT.CREDITCARD = <%= JSON.stringify(CreditCard) %>;
<% } %>

// add for bootstrapping widget data
<% if (Widget) { %>
	SC.ENVIRONMENT.WIDGET = <%= JSON.stringify(Widget) %>;
<% } %>

<% if (WidgetShapes) { %>
	SC.ENVIRONMENT.WIDGET_SHAPES = <%= JSON.stringify(WidgetShapes) %>;
<% } %>


<% if (LivePayment) { %>

	SC.ENVIRONMENT.LIVEPAYMENT = <%= JSON.stringify(LivePayment) %>;
<% } %>

<% if (Merchandising) { %>
	// Merchandising
	SC.ENVIRONMENT.MERCHANDISING = <%= JSON.stringify(Merchandising, {}) %>;
<% } %>

// Product Lists configuration
<% if (productlist_bundle_present) { %>
	SC.ENVIRONMENT.PRODUCTLISTS_CONFIG = <%= JSON.stringify(SC.Configuration.product_lists) %>;
<% } %>

// Cases configuration
<% if (SC.Configuration.cases) { %>
	SC.ENVIRONMENT.CASES_CONFIG = <%= JSON.stringify(SC.Configuration.cases) %>;
<% } %>

// CMS configuration
<% if (SC.Configuration.useCMS) { %>
	SC.ENVIRONMENT.CMS = <%= JSON.stringify(CMS || {}) %>;
<% } %>

// Touch Support
// Checks if this is a touch enalbed device
SC.ENVIRONMENT.isTouchEnabled = ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch;
// Sets the class property of the html element
document.documentElement.className = (SC.ENVIRONMENT.isTouchEnabled) ? "touch" : "no-touch";

// Include Language Files
document.write('<script src="<%= session.getAbsoluteUrl('checkout', 'languages/en.js') %>?t={{timestamp}}"><\\/script>');

<% if (Environment && Environment.currentLanguage && Environment.currentLanguage.locale && Environment.currentLanguage.locale !== 'en') { %>
	document.write('<script src="<%= session.getAbsoluteUrl('checkout', 'languages/myaccount_' + Environment.currentLanguage.locale + '.js') %>?t={{timestamp}}"><\\/' + 'script' + '>');
<% } %>

<% if (Error) { %>

	SC.ENVIRONMENT.contextError = <%= JSON.stringify(Error) %>;

	if(!SC.ENVIRONMENT.baseUrl)
	{
		SC.ENVIRONMENT.baseUrl = '<%=  session.getAbsoluteUrl(request.getURL().indexOf('https:') === 0 ? 'checkout' : 'shopping', '/{{file}}') %>';
	}

<% } %>

SC.ENVIRONMENT.published = {};
<% _.each(SC.Configuration.publish,function(i){
	var res = require(i.model)[i.call]();
%>
	SC.ENVIRONMENT.published.<%= i.key %> = <%= JSON.stringify(res) %>;
<% });%>
